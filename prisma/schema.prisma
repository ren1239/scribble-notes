// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id String @id @unique //matches kinde ID

  email        String  @unique
  firstName    String
  lastName     String
  profileImage String?

  File File[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

//Create a custom type for the upload status
enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id   String @id @default(cuid())
  name String

  uploadStatus UploadStatus @default(PENDING)

  url       String
  key       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Note Note[]

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Note {
  id String @id @default(cuid())

  title    String
  subtitle String

  content String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  File   File?   @relation(fields: [fileId], references: [id])
  fileId String?
}
